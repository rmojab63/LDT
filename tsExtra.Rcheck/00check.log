* using log directory 'D:/GitHub/LDT/tsExtra.Rcheck'
* using R version 4.2.2 (2022-10-31 ucrt)
* using platform: x86_64-w64-mingw32 (64-bit)
* using session charset: UTF-8
* using options '--no-manual --as-cran'
* checking for file 'tsExtra/DESCRIPTION' ... OK
* this is package 'tsExtra' version '0.1.0.0'
* package encoding: UTF-8
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for executable files ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking whether package 'tsExtra' can be installed ... [50s] OK
* checking installed package size ... OK
* checking package directory ... OK
* checking for future file timestamps ... OK
* checking DESCRIPTION meta-information ... OK
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking loading without being on the library search path ... OK
* checking dependencies in R code ... OK
* checking S3 generic/method consistency ... WARNING
as.character:
  function(x, ...)
as.character.ldtf:
  function(frequency)

See section 'Generic functions and methods' in the 'Writing R
Extensions' manual.
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... NOTE
as.ldtf: no visible binding for global variable 'classStr'
Undefined global functions or variables:
  classStr
* checking Rd files ... OK
* checking Rd metadata ... OK
* checking Rd line widths ... NOTE
Rd file 'F_DailyInWeek.Rd':
  \examples lines wider than 100 characters:
     dw1 <- F_DailyInWeek(2023, 5, 16, "wed", "sat") # This is NOT 16/5/2023. It is 17/5/2023. Since it was outside the week, we moved it fo ... [TRUNCATED]
     dw2 <- F_DailyInWeek(2023, 5, 16, "wed", "sat", FALSE) # This is 13/5/2023. The original day was outside the week, but we moved backwar ... [TRUNCATED]

Rd file 'F_Hourly.Rd':
  \examples lines wider than 100 characters:
     ho0_class_str <- get.class.id(ho0) # this will be 'ho|d'. The second part (i.e., 'd') shows that this frequency is defined in a 'Daily' ... [TRUNCATED]

Rd file 'F_ListDate.Rd':
  \examples lines wider than 100 characters:
     Ld_invalid <- as.ldtf("20231102", "Ld:20231101;20220903;20200823;20230303") # 'E' is not a member of the list

Rd file 'F_Minutely.Rd':
  \examples lines wider than 100 characters:
     mi0_class_str <- get.class.id(mi0) # this will be 'mi|d'. The second part (i.e., 'd') shows that this frequency is defined in a 'Daily' ... [TRUNCATED]

Rd file 'F_Monthly.Rd':
  \examples lines wider than 100 characters:
     m0 <- F_Monthly(2020, 2) # this is a monthly frequency that refers to the second month of the year 2020.
     m_new <- as.ldtf("2021m3", "m") # this is a monthly frequency that refers to the third month of the year 2021.

Rd file 'F_MultiWeekly.Rd':
  \examples lines wider than 100 characters:
     mw0 <- F_MultiWeekly(2023, 1, 2,3) # This is 2/1/2023 which is Monday. Next observation belongs to 23/1/2023.

Rd file 'F_MultiYearly.Rd':
  \examples lines wider than 100 characters:
     my0 <- F_MultiYearly(2020, 2) # this is a multi-year frequency that refers to the year 2020. The next observation is expected in 2022 ( ... [TRUNCATED]
     my_new <- as.ldtf("2020", "z3") # this is a multi-year frequency that refers to the year 2020. However, the next observation is expecte ... [TRUNCATED]

Rd file 'F_Quarterly.Rd':
  \examples lines wider than 100 characters:
     q0 <- F_Quarterly(2020, 2) # this is a quarterly frequency that refers to the second quarter of the year 2021.
     q_new <- as.ldtf("2021q3", "q") # this is a quarterly frequency that refers to the third quarter of the year 2021.

Rd file 'F_Secondly.Rd':
  \examples lines wider than 100 characters:
     se0_class_str <- get.class.id(se0) # this will be 'se|d'. The second part (i.e., 'd') shows that this frequency is defined in a 'Daily' ... [TRUNCATED]

Rd file 'F_XTimesADay.Rd':
  \examples lines wider than 100 characters:
     xd0_class_str <- get.class.id(xd0) # this will be 'da13|d'. The second part (i.e., 'd') shows that this frequency is defined in a 'Dail ... [TRUNCATED]

Rd file 'F_XTimesAYear.Rd':
  \examples lines wider than 100 characters:
     xty0 <- F_XTimesAYear(2020, 3, 1) # this frequency divides the year 2020 into 3 partitions and refers to the first partition.
     xty_new <- as.ldtf("2021:24", "z24") # this frequency divides the year 2021 into 24 partitions and refers to the last partition.

Rd file 'F_XTimesZYears.Rd':
  \examples lines wider than 100 characters:
     xtzy0 <- F_XTimesZYears(2020, 3, 2, 3) # this frequency divides the year 2020 into 3 partitions and refers to the last partition. The n ... [TRUNCATED]
     xtzy_new <- as.ldtf("2021:3", "x3z4") # this frequency divides the year 2021 into 3 partitions and refers to the last partition. The ne ... [TRUNCATED]

These lines will be truncated in the PDF manual.
* checking Rd cross-references ... OK
* checking for missing documentation entries ... OK
* checking for code/documentation mismatches ... OK
* checking Rd \usage sections ... WARNING
Undocumented arguments in documentation object 'BindVariables'
  'varList' 'numExo'
Documented arguments not in \usage in documentation object 'BindVariables':
  'varA' 'numEndo'

Undocumented arguments in documentation object 'as.ldtf'
  'strclass'
Documented arguments not in \usage in documentation object 'as.ldtf':
  'classStr'

Functions with \usage entries need to have the appropriate \alias
entries, and all their arguments documented.
The \usage entries must correspond to syntactically valid R code.
See chapter 'Writing R documentation files' in the 'Writing R
Extensions' manual.
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... WARNING
'::' or ':::' import not declared from: 'ldt'
* checking line endings in C/C++/Fortran sources/headers ... OK
* checking line endings in Makefiles ... OK
* checking compilation flags in Makevars ... WARNING
Non-portable flags in variable 'PKG_CXXFLAGS':
  -Wno-parentheses -Wno-deprecated-declarations
* checking for GNU extensions in Makefiles ... OK
* checking for portable use of $(BLAS_LIBS) and $(LAPACK_LIBS) ... OK
* checking use of PKG_*FLAGS in Makefiles ... OK
* checking use of SHLIB_OPENMP_*FLAGS in Makefiles ... OK
* checking pragmas in C/C++ headers and code ... OK
* checking compilation flags used ... WARNING
Compilation used the following non-portable flag(s):
  '-Wno-deprecated-declarations' '-Wno-parentheses'
including flag(s) suppressing warnings
* checking compiled code ... OK
* checking examples ... ERROR
Running examples in 'tsExtra-Ex.R' failed
The error most likely occurred in:

> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: F_CrossSection
> ### Title: Creates a Cross-Section Frequency
> ### Aliases: F_CrossSection
> 
> ### ** Examples
> 
> 
> cs0 <- F_CrossSection(10) # this initializes a cross-section frequency
> 
> cs0_value_str <-  as.character(cs0) # this will be '10'.
> cs0_class_str <- get.class.id(cs0) # this will be 'cs'.
> 
> cs_new <- as.ldtf("20", "cs") # this is a cross-section frequency. It points to position 20.
Error in .Parse_F(str, classStr) : object 'classStr' not found
Calls: as.ldtf -> .Parse_F
Execution halted
* checking for unstated dependencies in 'tests' ... WARNING
'::' or ':::' import not declared from: 'ldt'
'library' or 'require' call not declared from: 'ldt'
* checking tests ... ERROR
  Running 'testthat.R'
Running the tests in 'tests/testthat.R' failed.
Complete output:
  > # This file is part of the standard setup for testthat.
  > # It is recommended that you do not modify it.
  > #
  > # Where should you do additional test configuration?
  > # Learn more about the roles of various files in:
  > # * https://r-pkgs.org/tests.html
  > # * https://testthat.r-lib.org/reference/test_package.html#special-files
  > 
  > library(testthat)
  > library(ldt)
  Error in library(ldt) : there is no package called 'ldt'
  Execution halted
* checking for non-standard things in the check directory ... OK
* checking for detritus in the temp directory ... OK
* DONE
Status: 2 ERRORs, 6 WARNINGs, 2 NOTEs
